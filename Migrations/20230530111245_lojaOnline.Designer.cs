// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using database_web.Data;

#nullable disable

namespace database_web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230530111245_lojaOnline")]
    partial class lojaOnline
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("database_web.Models.Anuncio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ModeradorFK")
                        .HasColumnType("int");

                    b.Property<int>("VendedorFK")
                        .HasColumnType("int");

                    b.Property<string>("moderadorlogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("preco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vendedorlogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("moderadorlogin");

                    b.HasIndex("vendedorlogin");

                    b.ToTable("anuncio");
                });

            modelBuilder.Entity("database_web.Models.Carrinho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompradorFK")
                        .HasColumnType("int");

                    b.Property<string>("compradorlogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("preco")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("compradorlogin");

                    b.ToTable("carrinho");
                });

            modelBuilder.Entity("database_web.Models.Comprador", b =>
                {
                    b.Property<string>("login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("dinheiro")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("login");

                    b.ToTable("comprador");
                });

            modelBuilder.Entity("database_web.Models.Moderador", b =>
                {
                    b.Property<string>("login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("dinheiro")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("login");

                    b.ToTable("moderador");
                });

            modelBuilder.Entity("database_web.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrinhoFK")
                        .HasColumnType("int");

                    b.Property<int>("CompradorFK")
                        .HasColumnType("int");

                    b.Property<int>("carrinhoId")
                        .HasColumnType("int");

                    b.Property<string>("compradorlogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("carrinhoId");

                    b.HasIndex("compradorlogin");

                    b.ToTable("produto");
                });

            modelBuilder.Entity("database_web.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnuncioFK")
                        .HasColumnType("int");

                    b.Property<int>("CompradorFK")
                        .HasColumnType("int");

                    b.Property<int>("ModeradorFK")
                        .HasColumnType("int");

                    b.Property<int>("anuncioId")
                        .HasColumnType("int");

                    b.Property<string>("compradorlogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moderadorlogin")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("anuncioId");

                    b.HasIndex("compradorlogin");

                    b.HasIndex("moderadorlogin");

                    b.ToTable("review");
                });

            modelBuilder.Entity("database_web.Models.Vendedor", b =>
                {
                    b.Property<string>("login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("dinheiro")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("login");

                    b.ToTable("vendedor");
                });

            modelBuilder.Entity("database_web.Models.Anuncio", b =>
                {
                    b.HasOne("database_web.Models.Moderador", "moderador")
                        .WithMany("ListaAnuncio")
                        .HasForeignKey("moderadorlogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("database_web.Models.Vendedor", "vendedor")
                        .WithMany("ListaAnuncio")
                        .HasForeignKey("vendedorlogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("moderador");

                    b.Navigation("vendedor");
                });

            modelBuilder.Entity("database_web.Models.Carrinho", b =>
                {
                    b.HasOne("database_web.Models.Comprador", "comprador")
                        .WithMany("ListaCarrinhos")
                        .HasForeignKey("compradorlogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comprador");
                });

            modelBuilder.Entity("database_web.Models.Produto", b =>
                {
                    b.HasOne("database_web.Models.Carrinho", "carrinho")
                        .WithMany("ListaProdutos")
                        .HasForeignKey("carrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("database_web.Models.Comprador", "comprador")
                        .WithMany("ListaProdutos")
                        .HasForeignKey("compradorlogin");

                    b.Navigation("carrinho");

                    b.Navigation("comprador");
                });

            modelBuilder.Entity("database_web.Models.Review", b =>
                {
                    b.HasOne("database_web.Models.Anuncio", "anuncio")
                        .WithMany("ListaReviews")
                        .HasForeignKey("anuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("database_web.Models.Comprador", "comprador")
                        .WithMany("ListaReviews")
                        .HasForeignKey("compradorlogin");

                    b.HasOne("database_web.Models.Moderador", "moderador")
                        .WithMany("ListaReviews")
                        .HasForeignKey("moderadorlogin");

                    b.Navigation("anuncio");

                    b.Navigation("comprador");

                    b.Navigation("moderador");
                });

            modelBuilder.Entity("database_web.Models.Anuncio", b =>
                {
                    b.Navigation("ListaReviews");
                });

            modelBuilder.Entity("database_web.Models.Carrinho", b =>
                {
                    b.Navigation("ListaProdutos");
                });

            modelBuilder.Entity("database_web.Models.Comprador", b =>
                {
                    b.Navigation("ListaCarrinhos");

                    b.Navigation("ListaProdutos");

                    b.Navigation("ListaReviews");
                });

            modelBuilder.Entity("database_web.Models.Moderador", b =>
                {
                    b.Navigation("ListaAnuncio");

                    b.Navigation("ListaReviews");
                });

            modelBuilder.Entity("database_web.Models.Vendedor", b =>
                {
                    b.Navigation("ListaAnuncio");
                });
#pragma warning restore 612, 618
        }
    }
}
